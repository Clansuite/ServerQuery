name: QA

on:
  # This workflow runs on pushes to the main branch.
  push:
    branches: [ main ]
  # This workflow runs on pull requests targeting the main branch.
  pull_request:
    branches: [ main ]

env:
  PHP_VERSION: 8.4

permissions:
  contents: read

jobs:

# ---------------------------------------------------------------------------------------

  qa:

# ---------------------------------------------------------------------------------------

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5 # https://github.com/actions/checkout
        with:
          fetch-depth: 1
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2 # https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ env.PHP_VERSION }}
          coverage: none
          tools: none

      - name: Lint PHP files
        run: find . -name "*.php" -not -path "./vendor/*" | xargs -n1 -P4 php -l

      - name: Validate composer.json
        run: composer validate --no-ansi --strict composer.json

      - name: Install dependencies
        run: composer install --no-progress --prefer-dist

      - name: Validate Coding Standards using php-cs-fixer
        run: ./vendor/bin/php-cs-fixer check --config ./build-tools/php-cs-fixer/php-cs-fixer.dist.php --show-progress=dots --using-cache=no --verbose

      - name: Run PHPStan static analysis
        run: |
          cd ./build-tools/.phpstan
          composer install --no-progress --prefer-dist
          cd ../../
          ./build-tools/.phpstan/vendor/bin/phpstan analyse -c ./build-tools/phpstan/phpstan.neon.dist --no-progress --error-format=github

      - name: Run Psalm static analysis
        run: |
          ./vendor/bin/psalm -c ./build-tools/psalm/psalm.xml --show-info=true


# ---------------------------------------------------------------------------------------

  apigen:

# ---------------------------------------------------------------------------------------

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5 # https://github.com/actions/checkout
        with:
          fetch-depth: 1
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2 # https://github.com/shivammathur/setup-php
        with:
          php-version: '8.2'
          extensions: mbstring, intl, zip

      - name: Install dependencies
        run: |
          cd build-tools/apigen
          composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Generate API documentation
        run: |
          php bin/generate_apigen_docs.php

      - name: Move generated docs into subfolder
        run: |
          mkdir -p ./build/apigen/apigen
          mv ./build-tools/apigen/* ./build/apigen/apigen

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v4 # https://github.com/actions/upload-pages-artifact/
        with:
          name: apigen
          path: ./build/apigen

# ---------------------------------------------------------------------------------------

  code-coverage:

# ---------------------------------------------------------------------------------------

    runs-on: ubuntu-latest
    needs: qa

    steps:
      - name: Checkout
        uses: actions/checkout@v5 # https://github.com/actions/checkout
        with:
          fetch-depth: 1
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2 # https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ env.PHP_VERSION }}
          coverage: xdebug
          tools: none

      - name: Install dependencies
        run: composer install --no-progress --prefer-dist

      - name: Run test and generate code coverage report
        run: |
          ./vendor/bin/phpunit --config ./build-tools/phpunit/phpunit.coverage.xml --coverage-html build/coverage

      - name: Upload coverage to Pages artifact
        uses: actions/upload-pages-artifact@v4 # https://github.com/actions/upload-pages-artifact/
        with:
          name: coverage
          path: ./build/coverage

# ---------------------------------------------------------------------------------------

  deploy:

# ---------------------------------------------------------------------------------------

    needs: [apigen, code-coverage]

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5 # https://github.com/actions/checkout
        with:
          fetch-depth: 1
          ref: ${{ github.sha }}

      - name: Download coverage artifact
        uses: actions/download-artifact@v5 # https://github.com/actions/download-artifact
        with:
          name: coverage
          path: ./pages/coverage

      - name: Download apigen artifact
        uses: actions/download-artifact@v5 # https://github.com/actions/download-artifact
        with:
          name: apigen
          path: ./pages/apigen

      - name: Extract coverage artifact
        run: |
          cd ./pages/coverage
          tar -xf artifact.tar
          rm artifact.tar

      - name: Extract apigen artifact
        run: |
          cd ./pages/apigen
          tar -xf artifact.tar
          rm artifact.tar

      - name: Verify artifacts
        run: |
          ls ./pages/coverage
          ls ./pages/apigen

      - name: Create top-level Index file
        run: |
          cat > ./pages/index.html <<'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Clansuite Server Query</title>
          </head>
          <body>
              <p>
                  <a href="./coverage/">Code Coverage Report</a>
                  <br>
                  <a href="./apigen/">API documentation</a>
              </p>
          </body>
          </html>
          EOF

      - name: Create .nojekyll file to disable Jekyll processing
        run: |
          touch ./pages/.nojekyll

      - name: Upload combined site as a "github-pages" artifact
        uses: actions/upload-pages-artifact@v4 # https://github.com/actions/upload-pages-artifact
        with:
          path: ./pages

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4 # https://github.com/actions/deploy-pages/
